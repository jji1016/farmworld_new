<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.farmworld.mypage.mapper.ReviewMapper">

	
	<!-- 리뷰 관리 -->
	<select id="review1" resultType="OrderVO">
		SELECT order_num, order_date
		FROM myfarmproject_db.order
		WHERE buyer_num = #{user_num}
	</select>
	<select id="review2" resultType="GoodsVO">
<!-- 		SELECT goods.goods_num, goods_category, goods_title, goods_content, goods.user_num, goods_price, goods.image_folder_num -->
<!-- 		FROM myfarmproject_db.review LEFT JOIN myfarmproject_db.goods ON myfarmproject_db.review.goods_num = myfarmproject_db.goods.goods_num -->
<!-- 		WHERE myfarmproject_db.review.user_num = #{user_num} -->
	
	SELECT goods.goods_num, goods_category, goods_title, goods_content, goods.user_num, goods_price, goods.image_folder_num, myfarmproject_db.order.buyer_num
	FROM myfarmproject_db.goods LEFT JOIN myfarmproject_db.order ON myfarmproject_db.goods.goods_num = myfarmproject_db.order.goods_num
	WHERE myfarmproject_db.goods.goods_num IN (SELECT goods_num
												FROM myfarmproject_db.order
                    							WHERE buyer_num = #{user_num})
    AND myfarmproject_db.order.buyer_num = #{user_num};
	</select>
	<select id="review3" resultType="ReviewVO">
		SELECT review_score, review_content, review_date, review_num
		FROM myfarmproject_db.review
		WHERE user_num = #{user_num}
	</select>
	<select id="reviewimage" resultType="ImageVO">
<!-- 		SELECT * -->
<!-- 		FROM (myfarmproject_db.goods LEFT JOIN myfarmproject_db.review ON myfarmproject_db.goods.goods_num = myfarmproject_db.review.goods_num) -->
<!--      	LEFT JOIN myfarmproject_db.image ON myfarmproject_db.goods.image_folder_num = myfarmproject_db.image.image_folder_num -->
<!--      	WHERE myfarmproject_db.review.user_num = #{user_num} -->
	
<!-- 	SELECT *  -->
<!-- 	FROM myfarmproject_db.order LEFT JOIN myfarmproject_db.goods ON myfarmproject_db.order.goods_num = myfarmproject_db.goods.goods_num  -->
<!-- 	WHERE myfarmproject_db.order.buyer_num = #{user_num} -->

		SELECT o.*, g.*, i.*
	    FROM myfarmproject_db.order o
	    JOIN goods g ON o.goods_num = g.goods_num
	    LEFT JOIN image i ON g.image_folder_num = i.image_folder_num
	    WHERE o.buyer_num = #{user_num};

	</select>
	
	
	<!-- 리뷰 상세 -->
	<select id="getreviewVO" resultType="ReviewVO" parameterType="ReviewVO">
		SELECT *
		FROM myfarmproject_db.review
		WHERE review_num = #{review_num}
	</select>
	<select id="getreviewVOimage" resultType="ImageVO">
		SELECT *
		FROM myfarmproject_db.goods LEFT JOIN myfarmproject_db.image ON myfarmproject_db.goods.image_folder_num = myfarmproject_db.image.image_folder_num
	</select>
	
	
	<!-- 리뷰 수정 -->
	<update id="updatereview" parameterType="ReviewVO">
		UPDATE myfarmproject_db.review
		SET review_score = #{review_score}, review_content = #{review_content}
		WHERE review_num = #{review_num}
	</update>
	
	<update id="updateimage" parameterType="ImageVO">
		UPDATE myfarmproject_db.image
		SET image1 = #{image1}
		WHERE image_folder_num = (SELECT image_folder_num
									 FROM myfarmproject_db.review
									 WHERE review_num = #{review_num})
	</update>
	
	
	<!-- 리뷰 삭제 -->
	<delete id="reviewdelete" parameterType="ReviewVO">
		DELETE FROM  myfarmproject_db.review WHERE review_num = #{review_num}
	</delete>
	
	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="ReviewVO"
	keyColumn="goods_num" keyProperty="goods_num" useGeneratedKeys="true">
		INSERT INTO review (goods_num, user_num, order_num, review_score, review_content, image_folder_num )
		VALUES (#{goods_num}, #{user_num}, #{order_num}, #{review_score}, #{review_content}, #{image_folder_num})
	</insert>
</mapper>
	